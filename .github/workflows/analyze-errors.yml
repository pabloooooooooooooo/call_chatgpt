name: Analyse de logs r√©utilisable

# Changement majeur ici : on utilise "workflow_call" au lieu de "workflow_dispatch"
on:
  workflow_call:
    # Les inputs sont maintenant d√©finis ici
    inputs:
      logs:
        required: true
        type: string
      pr_number:
        required: true
        type: string
      # Le num√©ro de la PR doit √™tre associ√© √† un d√©p√¥t, on le passe en input
      repo_owner:
        required: true
        type: string
      repo_name:
        required: true
        type: string
        
    # Les secrets que ce workflow attend de recevoir de l'appelant
    secrets:
      OPENAI_API_KEY:
        required: true
      GH_TOKEN:
        required: true

jobs:
  analyze-and-comment:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    
    steps:
      - name: Analyser les logs avec ChatGPT
        id: chatgpt-analysis
        run: |
          # On utilise le secret pass√© par l'appelant
          response=$(curl -s -X POST https://api.openai.com/v1/chat/completions \
            -H "Content-Type: application/json" \
            -H "Authorization: Bearer ${{ secrets.OPENAI_API_KEY }}" \
            -d '{
              "model": "gpt-3.5-turbo",
              "messages": [
                {
                  "role": "system",
                  "content": "Tu es un assistant expert en analyse de logs d''erreurs. Analyse les logs suivants et fournis un r√©sum√© concis des erreurs potentielles et des suggestions de correction. Formatte ta r√©ponse en Markdown."
                },
                {
                  "role": "user",
                  "content": "${{ inputs.logs }}" # On utilise "inputs" au lieu de "github.event.inputs"
                }
              ],
              "max_tokens": 512,
              "temperature": 0.5
            }')
          
          analysis_content=$(echo "$response" | jq -r '.choices[0].message.content')
          echo "analysis<<EOF" >> $GITHUB_OUTPUT
          echo "$analysis_content" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
        shell: bash

      - name: Commenter sur la Pull Request
        uses: actions/github-script@v6
        with:
          # On utilise le secret pass√© par l'appelant
          github-token: ${{ secrets.GH_TOKEN }}
          script: |
            const comment_body = `### Analyse des logs par ChatGPT ü§ñ\n\n${{ steps.chatgpt-analysis.outputs.analysis }}`;

            // On utilise les inputs pour sp√©cifier le d√©p√¥t et le num√©ro de PR
            await github.rest.issues.createComment({
              owner: '${{ inputs.repo_owner }}',
              repo: '${{ inputs.repo_name }}',
              issue_number: ${{ inputs.pr_number }},
              body: comment_body
            });
